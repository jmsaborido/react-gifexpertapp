{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","process","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","require","config","ReactDOM","render","document","getElementById"],"mappings":"uPAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,IAfG,SAACA,GACvBF,EAAcE,EAAEQ,OAAOF,OAcIG,CAAkBT,Q,uBCrBxCU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,6BAC2EI,oCAD3E,SAEKC,MAAMH,GAFX,cAEbI,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QARvB,kBAWZO,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IACrC,OACI,yBAAKe,UAAU,0CACX,yBAAKC,IAAKhB,EAAKiB,IAAI,mBAAmBF,UAAU,QAChD,2BAAIJ,KCFHO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZf,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAAAd,GACnBY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,CAACrB,IAEGsB,EDXmBI,CAAa1B,GAA/BQ,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OACI,oCACI,wBAAIJ,UAAU,sCAAsCjB,GAEhDqB,EACI,uBAAGJ,UAAU,qCAAb,eACA,yBAAKA,UAAU,aAEPT,EAAKE,KAAI,SAACC,GAAD,OACL,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEZjDiB,EAAe,WAAO,IAAD,EACM3C,mBAAS,IADf,mBACvBQ,EADuB,KACXT,EADW,KAI9B,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEQS,EAAWiB,KAAI,SAACV,GAAD,OACX,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCb1D6B,EAAQ,IAAUC,SAGlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.615bd73b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >= 1) {\r\n            setCategories(categories => [inputValue, ...categories])\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => { handleInputChange(e) }}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${process.env.REACT_APP_API_KEY}`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url} alt=\"No hay gif amigo\" className=\"gif\"></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*, { useEffect, useState }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n            {\r\n                loading ?\r\n                    <p className=\" animate__animated animate__flash\">Cargando...</p> :\r\n                    <div className=\"card-grid\">\r\n                        {\r\n                            data.map((img) =>\r\n                                <GifGridItem key={img.id} {...img} />\r\n                            )\r\n                        }\r\n                    </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","// rafc para crearlo\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    // const handleAdd = () => setCategories([...categories, prompt('¿Que categoria quieres añadir?')]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <ol>\r\n                {\r\n                    categories.map((category) =>\r\n                        <GifGrid key={category} category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\nrequire('dotenv').config();\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// Crear component GifExpertAPP\n// <h2>GifExpertApp</h2>\n// <hr/>"],"sourceRoot":""}